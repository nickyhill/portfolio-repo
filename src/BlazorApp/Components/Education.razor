@inject IJSRuntime JSRuntime


<section class="light" id="education">

    <h2 style="cursor: pointer;" @onclick="ToggleEducation">
        Education <span id="arrowEdu" style="font-weight: bold; font-size: 20px;">â–¶</span>
    </h2>

    <div class="education-container" style="display: none; margin: 0 auto; width: fit-content;">
        @if (education is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <ul style="list-style-type: none; text-align: left; columns: 1; font-size: 1.25rem; margin: 2rem 3rem; gap: 3rem;">
                <li>School: @education.School</li>
                <li>Graduated: @education.ExpectedGrad</li>
                <li>Degree: @education.Degree</li>
                <li>Major: @education.Major</li>
                <li>GPA: @education.GPA</li>
            </ul>
        }
    </div>
</section>




@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private EducationMe? education;
    private HeroImage? hero;
    private bool isEducationVisible = false;

    protected override async Task OnInitializedAsync()
    {
        education = await Http.GetFromJsonAsync<EducationMe>("sample-data/education.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "about");
    }

    private async Task ToggleEducation()
    {
        await JSRuntime.InvokeVoidAsync("toggleEducation");
    }
}
