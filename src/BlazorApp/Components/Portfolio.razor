@inject IJSRuntime JSRuntime

<section class="light" id="portfolio">
    <h2>Portfolio</h2>
    <h4>click the description to be brought to my repositories</h4>
    <div class="portfolio-container">
        @if (projects is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="container">
                @foreach (var project in projects)
                {
                <div class="project-container">
                    
                    <h3 style="cursor: pointer;">
                        @project.Title
                    </h3>
                    
                    <p class="small">
                        <a href="@project.Url" target="_blank" rel="noopener noreferrer">
                            @project.Description
                        </a>
                    </p>
                    
                </div>
                }
            </div>
        }
    </div>
</section>


@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private List<Project>? projects;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<Project>>("sample-data/projects.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "portfolio");
        isExpanded = Enumerable.Repeat(false, projects.Count).ToList();
    }

    private void ToggleProject(int projectIndex)
    {
        isExpanded[projectIndex] = !isExpanded[projectIndex];
    }
}
